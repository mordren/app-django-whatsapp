# Generated by Django 4.1.2 on 2022-10-31 19:34

import builtins
import django.core.validators
from django.db import migrations, models
import django_cpf_cnpj.fields


class Migration(migrations.Migration):

    dependencies = [
        ('clientes', '0003_alter_person_phone'),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('cnpj', django_cpf_cnpj.fields.CNPJField(max_length=18)),
                ('telefone', models.IntegerField(blank=True, null=True)),
                ('whatsapp', models.PositiveBigIntegerField(help_text='DD-XXXX XXXX sem os espaços e sem o nove adicional', unique=True, validators=[django.core.validators.MinValueValidator(11111111111), django.core.validators.MaxValueValidator(9999999999)])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoLaudo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipoLaudo', models.CharField(max_length=10)),
            ],
        ),
        migrations.RemoveField(
            model_name='person',
            name='phone',
        ),
        migrations.AddField(
            model_name='person',
            name='whatsapp',
            field=models.PositiveBigIntegerField(default=builtins.dir, help_text='DD-XXXX XXXX sem os espaços e sem o nove adicional', unique=True, validators=[django.core.validators.MinValueValidator(11111111111), django.core.validators.MaxValueValidator(9999999999)]),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Laudo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('dataValidade', models.DateField()),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('cliente', models.ManyToManyField(blank=True, null=True, to='clientes.person')),
                ('empresa', models.ManyToManyField(blank=True, null=True, to='clientes.empresa')),
                ('tipo', models.ManyToManyField(to='clientes.tipolaudo')),
            ],
        ),
    ]
